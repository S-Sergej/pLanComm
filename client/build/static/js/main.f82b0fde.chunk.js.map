{"version":3,"sources":["services/auth.js","components/Navbar.js","components/Startpage.js","components/ProjectList.js","components/ProjectForm.js","components/Projects.js","components/TaskForm.js","components/TaskList.js","components/ProjectDetail.js","components/TaskDetail.js","components/Signup.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","email","axios","post","then","response","data","catch","err","login","Navbar","props","className","bg","user","to","onClick","delete","setUser","Startpage","React","Component","ProjectList","projects","map","project","key","_id","title","ProjectForm","state","description","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","console","log","getData","Form","onSubmit","this","Group","Label","htmlFor","Control","type","id","onChange","Button","Projects","get","location","pathname","TaskForm","projectId","hideForm","TaskList","tasks","length","task","ProjectDetail","error","editForm","taskForm","match","params","status","message","deleteProject","history","push","toggleEdit","put","canUpdate","owner","variant","ProjectDetails","taskId","Signup","Alert","require","config","Login","window","href","process","App","projectsRoute","exact","path","component","render","TaskDetail","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f82b0fde.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst signup = (username, password, email) => {\n  return axios\n    .post(\"/api/auth/signup\", {\n      username: username,\n      password: password,\n      email: email,\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password, email) => {\n  return axios\n    .post(\"/api/auth/login\", {\n      username: username,\n      password: password,\n      email: email\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\n\nconst logout = () => {\n  axios.delete(\"/api/auth/logout\");\n};\n\nexport { signup, login, logout };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar as Nav } from \"react-bootstrap\";\nimport { logout } from \"../services/auth\";\n\nconst Navbar = props => {\n  const handleLogout = () => {\n    // destroys the session on the server\n    logout();\n    // updates the `user` state in App\n    props.setUser(null);\n  };\n\n  return (\n    <Nav className=\"nav justify-content-end\" bg=\"primary\">\n      {props.user ? (\n        <div>\n          <Link to=\"/\">Welcome {props.user.username}</Link>\n          <Link to=\"/projects\">Projects</Link>\n          <Link to=\"/\" onClick={handleLogout}>\n            Logout\n          </Link>\n        </div>\n      ) : (\n        <div>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/signup\">Signup</Link>\n          <Link to=\"/login\">Login</Link>\n        </div>\n      )}\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nclass Startpage extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>pLanComm</h1>\n                <p> wellcome to the private lan community !</p>\n            </div>\n        )\n    }\n\n}\n\nexport default Startpage;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = props => {\n  return (\n    <div>\n      {props.projects.map(project => {\n        return (\n          <div key={project._id}>\n            <h3>\n              <Link to={`/projects/${project._id}`}>{project.title}</Link>\n            </h3>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\n\nclass ProjectForm extends Component {\n  state = {\n    title: \"\",\n    description: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"SUBMIT\");\n\n    axios\n      .post(\"/api/projects\", {\n        title: this.state.title,\n        description: this.state.description\n      })\n      .then(response => {\n        this.props.getData();\n        this.setState({\n          title: \"\",\n          description: \"\"\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Label htmlFor=\"title\">Title: </Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            onChange={this.handleChange}\n            value={this.state.title}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"description\">Description: </Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            onChange={this.handleChange}\n            value={this.state.description}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\">Create a project</Button>\n      </Form>\n    );\n  }\n}\n\nexport default ProjectForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ProjectList from \"./ProjectList\";\nimport ProjectForm from \"./ProjectForm\";\n\nclass Projects extends Component {\n  state = {\n    projects: []\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/projects\")\n      .then(response => {\n        this.setState({\n          projects: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    console.log(\"Projects.render\"+this.props.location.pathname);\n    return (\n      <div className=\"projects-container\">\n        <ProjectList projects={this.state.projects} />\n        <ProjectForm getData={this.getData} />\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default class TaskForm extends Component {\n  state = {\n    title: \"\",\n    description: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { title, description } = this.state;\n\n    axios\n      .post(\"/api/tasks\", {\n        title,\n        description,\n        projectId: this.props.projectId\n      })\n      .then(() => {\n        this.props.getData();\n        this.props.hideForm();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Add task: </h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          <Button type=\"submit\">Add</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TaskList = props => {\n  return (\n    <div>\n      {props.tasks.length > 0 && <h2>Tasks:</h2>}\n      {props.tasks.map(task => {\n        return (\n          <div key={task._id}>\n            <Link to={`/tasks/${task._id}`}>\n              <h3>{task.title}</h3>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport TaskForm from \"./TaskForm\";\nimport TaskList from \"./TaskList\";\n\nclass ProjectDetail extends Component {\n  state = {\n    project: null,\n    error: \"\",\n    editForm: false,\n    taskForm: false,\n    title: \"\",\n    description: \"\"\n  };\n\n  getData = () => {\n    const id = this.props.match.params.id;\n \n    axios\n      .get(`/api/projects/${id}`)\n      .then(response => {\n        this.setState({\n          project: response.data,\n          title: response.data.title,\n          description: response.data.description\n        });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            error: err.response.data.message\n          });\n        }\n      });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  deleteProject = () => {\n    const id = this.props.match.params.id;\n    axios\n      .delete(`/api/projects/${id}`)\n      .then(response => {\n        // redirect to '/projects'\n        console.log(this.props.history);\n        this.props.history.push(\"/projects\"); // `/projects` is our client side route\n        // this.props.history comes from react-router-dom <Route>\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  toggleEdit = () => {\n    this.setState({\n      editForm: !this.state.editForm\n    });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const id = this.props.match.params.id;\n    axios\n      .put(`/api/projects/${id}`, {\n        title: this.state.title,\n        description: this.state.description\n      })\n      .then(response => {\n        this.setState({\n          project: response.data,\n          // title: response.data.title,\n          // description: response.data.description,\n          editForm: false\n        });\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    console.log(this.state, this.props);\n    if (this.state.error) {\n      return <p>{this.state.error}</p>;\n    } else if (this.state.project === null) {\n      return <div></div>;\n    }\n\n    let canUpdate = false;\n\n    if (this.state.project.owner === this.props.user._id) {\n      canUpdate = true;\n    }\n    console.log(canUpdate);\n    return (\n      <div>\n        <h1>{this.state.project.title}</h1>\n        <p>{this.state.project.description}</p>\n\n        {canUpdate && (\n          <>\n            <Button onClick={this.toggleEdit}>Show Edit Form</Button>\n            <Button\n              onClick={() => this.setState({ taskForm: !this.state.taskForm })}\n            >\n              Show Task form\n            </Button>\n            <Button variant=\"danger\" onClick={this.deleteProject}>\n              Delete Project\n            </Button>\n          </>\n        )}\n\n        {this.state.editForm && (\n          <Form onSubmit={this.handleSubmit}>\n            <h2>Edit form</h2>\n            <Form.Group>\n              <Form.Label htmlFor=\"title\">Title: </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                value={this.state.title}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"description\">Description: </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"description\"\n                id=\"description\"\n                value={this.state.description}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button type=\"submit\">Edit</Button>\n          </Form>\n        )}\n\n        {this.state.taskForm && (\n          <TaskForm\n            projectId={this.state.project._id}\n            getData={this.getData}\n            hideForm={() => this.setState({ taskForm: false })}\n          />\n        )}\n\n        <TaskList tasks={this.state.project.tasks} />\n      </div>\n    );\n  }\n}\n\nexport default ProjectDetail;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nexport default class ProjectDetails extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    project: \"\"\n  };\n\n  componentDidMount() {\n    const taskId = this.props.match.params.id;\n\n    return axios\n      .get(`/api/tasks/${taskId}`)\n      .then(response => {\n        const { title, description, project } = response.data;\n        this.setState({ title, description, project });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    const task = {\n      title: this.state.title,\n      description: this.state.description,\n      project: this.state.project\n    };\n\n    return (\n      <div>\n        <h1>{task.title}</h1>\n        <p>{task.description}</p>\n        <Link to={`/projects/${task.project}`}>Back to project</Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    signup(this.state.username, this.state.password, this.state.email).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        // no error\n        // lift the data up to the App state\n        this.props.setUser(data);\n        // redirect to \"/projects\"\n        this.props.history.push(\"/projects\");\n      }\n    });\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <h2>Signup</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          \n          <Form.Group>\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label htmlFor=\"email\">Email: </Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          {this.state.error && (\n            <Alert variant=\"danger\">{this.state.error}</Alert>\n          )}\n          <Button type=\"submit\">Sign up</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import GoogleButton from 'react-google-button';\nimport React, { Component } from \"react\";\nimport { login } from \"../services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\nimport {Link } from \"react-router-dom\";\nrequire('dotenv').config();\n\nclass Login extends Component {\n  \n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    login(this.state.username, this.state.password).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        // no error\n        // lift the data up to the App state\n        this.props.setUser(data);\n        // redirect to \"/projects\"\n        this.props.history.push(\"/projects\");\n      }\n    });\n  };\n  \n  render() {\n    \n    \n    return (\n      <div>\n        <h2>Login</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n\n          </Form.Group>\n          {this.state.error && (\n            <Alert variant=\"danger\">{this.state.error}</Alert>\n          )}\n          <Button type=\"submit\">Log in</Button>\n        </Form>\n\n        <GoogleButton onClick={() => window.location.href=process.env.REACT_APP_CALLBACK_URL}/>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./App.css\";\nimport {Switch, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Startpage from \"./components/Startpage\";\nimport Projects from \"./components/Projects\";\nimport ProjectDetail from \"./components/ProjectDetail\";\nimport TaskDetail from \"./components/TaskDetail\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  };\n\n  projectsRoute = props => {\n    if (this.state.user) {\n      return <Projects {...props} />;\n    } else {\n      return <Redirect to=\"/\" />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar user={this.state.user} setUser={this.setUser} />\n        <Switch>\n          <Route exact path=\"/\" component={Startpage} />\n          <Route exact path=\"/signup\" render={\n            props => <Signup {...props} setUser={this.setUser} />\n          }/>\n          <Route exact path=\"/login\" render={\n            props => <Login {...props} setUser={this.setUser} />\n          }/>\n          <Route exact path=\"/projects\" render={this.projectsRoute}/>\n          <Route exact path=\"/projects/:id\" render={\n            props => <ProjectDetail user={this.state.user} {...props} />\n          }/>\n          <Route exact path=\"/tasks/:id\" component={TaskDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}