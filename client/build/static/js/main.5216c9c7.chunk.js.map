{"version":3,"sources":["services/auth.js","components/Navbar.js","components/Startpage.js","components/Signup.js","components/Login.js","components/Event.js","components/Playerdetails.js","components/Players.js","components/MainPage.js","components/UserProfil.js","services/fileupload.js","components/UserEditor.js","components/Game.js","components/EventHistory.js","components/Guestbook.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","email","axios","post","then","response","data","catch","err","login","Navbar","props","className","bg","user","to","icon","onClick","delete","setUser","Startpage","React","Component","Signup","state","error","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","message","history","push","console","log","this","Form","onSubmit","Group","Label","htmlFor","Control","type","id","onChange","Alert","variant","Button","require","config","Login","style","width","window","location","href","Event","Playerdetails","Players","players","getPlayers","get","res","map","onePlayer","key","_id","MainPage","UserProfil","getUserProfile","avatarURL","avatarUrl","usertype","userType","src","alt","file","errorHandler","UserEditor","handleFile","files","a","uploadData","FormData","append","service","urlFromCloudinary","Game","EventHistory","Guestbook","showGuestbookEntry","visibility","showAllEntries","guestbook","addEntrie","createEntrie","title","entrie","showGuestbook","cols","rows","oneEntrie","library","add","fab","fas","App","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kPAEMA,EAAS,SAACC,EAAUC,EAAUC,GAClC,OAAOC,IACJC,KAAK,mBAAoB,CACxBJ,SAAUA,EACVC,SAAUA,EACVC,MAAOA,IAERG,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIH,SAASC,SAIpBG,EAAQ,SAACV,EAAUC,EAAUC,GACjC,OAAOC,IACJC,KAAK,kBAAmB,CACvBJ,SAAUA,EACVC,SAAUA,EACVC,MAAOA,IAERG,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIH,SAASC,S,QCSXI,EA/BA,SAAAC,GAQb,OACE,kBAAC,IAAD,CAAKC,UAAU,0BAA0BC,GAAG,WACzCF,EAAMG,KACL,6BACE,kBAAC,IAAD,CAAMC,GAAG,SAAT,WAA0BJ,EAAMG,KAAKf,UACrC,kBAAC,IAAD,CAAMgB,GAAG,eAAT,eAAmC,kBAAC,IAAD,CAAiBC,KAAK,UACzD,kBAAC,IAAD,CAAMD,GAAG,SAAT,QAAsB,kBAAC,IAAD,CAAiBC,KAAK,aAC5C,kBAAC,IAAD,CAAMD,GAAG,iBAAT,iBAAuC,kBAAC,IAAD,CAAiBC,KAAK,cAC7D,kBAAC,IAAD,CAAMD,GAAG,cAAT,aAAgC,kBAAC,IAAD,CAAiBC,KAAK,kBACtD,kBAAC,IAAD,CAAMD,GAAG,IAAIE,QAhBA,WD2BrBf,IAAMgB,OAAO,oBCvBXP,EAAMQ,QAAQ,QAYR,UACS,kBAAC,IAAD,CAAiBH,KAAK,mBAIjC,6BACE,kBAAC,IAAD,CAAMD,GAAG,WAAT,UAA0B,kBAAC,IAAD,CAAiBC,KAAK,eAChD,kBAAC,IAAD,CAAMD,GAAG,UAAT,SAAwB,kBAAC,IAAD,CAAiBC,KAAK,oBCdzCI,E,iLAXP,OACI,6BACI,wCACA,4E,GALQC,IAAMC,W,mCCmFfC,E,2MAhFbC,MAAQ,CACNzB,SAAU,GACVC,SAAU,GACVC,MAAO,GACPwB,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,S,EAItCC,aAAe,SAAAL,GACbA,EAAMM,iBACNnC,EAAO,EAAK0B,MAAMzB,SAAU,EAAKyB,MAAMxB,SAAU,EAAKwB,MAAMvB,OAAOG,MAAK,SAAAE,GAClEA,EAAK4B,QAEP,EAAKN,SAAS,CACZH,MAAOnB,EAAK4B,WAKd,EAAKvB,MAAMQ,QAAQb,GAEnB,EAAKK,MAAMwB,QAAQC,KAAK,e,wEAO5B,OADAC,QAAQC,IAAIC,KAAK5B,OAEf,6BACE,sCACA,kBAAC6B,EAAA,EAAD,CAAMC,SAAUF,KAAKP,cACnB,kBAACQ,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLhB,KAAK,WACLiB,GAAG,WACHhB,MAAOQ,KAAKf,MAAMzB,SAClBiD,SAAUT,KAAKb,gBAInB,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLhB,KAAK,WACLiB,GAAG,WACHhB,MAAOQ,KAAKf,MAAMxB,SAClBgD,SAAUT,KAAKb,gBAInB,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,SAApB,WACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,QACLhB,KAAK,QACLiB,GAAG,QACHhB,MAAOQ,KAAKf,MAAMvB,MAClB+C,SAAUT,KAAKb,gBAIlBa,KAAKf,MAAMC,OACV,kBAACwB,EAAA,EAAD,CAAOC,QAAQ,UAAUX,KAAKf,MAAMC,OAEtC,kBAAC0B,EAAA,EAAD,CAAQL,KAAK,UAAb,WAA8B,kBAAC,IAAD,CAAiB9B,KAAK,qB,GA1EzCM,a,cCGrB8B,EAAQ,IAAUC,S,IAgFHC,E,2MA5Eb9B,MAAQ,CACNzB,SAAU,GACVC,SAAU,GACVyB,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,S,EAItCC,aAAe,SAAAL,GACbA,EAAMM,iBAENxB,EAAM,EAAKe,MAAMzB,SAAU,EAAKyB,MAAMxB,UAAUI,MAAK,SAAAE,GAC/CA,EAAK4B,QAEP,EAAKN,SAAS,CACZH,MAAOnB,EAAK4B,WAKd,EAAKvB,MAAMQ,QAAQb,GAEnB,EAAKK,MAAMwB,QAAQC,KAAK,c,wEAU5B,OACE,6BACE,qCACA,kBAACI,EAAA,EAAD,CAAMC,SAAUF,KAAKP,cACnB,kBAACQ,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLhB,KAAK,WACLiB,GAAG,WACHhB,MAAOQ,KAAKf,MAAMzB,SAClBiD,SAAUT,KAAKb,gBAGnB,kBAACc,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLhB,KAAK,WACLiB,GAAG,WACHhB,MAAOQ,KAAKf,MAAMxB,SAClBgD,SAAUT,KAAKb,gBAIlBa,KAAKf,MAAMC,OACV,kBAACwB,EAAA,EAAD,CAAOC,QAAQ,UAAUX,KAAKf,MAAMC,OAEtC,kBAAC0B,EAAA,EAAD,CAAQL,KAAK,UAAb,UAA6B,kBAAC,IAAD,CAAiB9B,KAAK,kBAGrD,yBAAKJ,UAAU,iBACf,kBAAC,oBAAD,CAAmB2C,MAAO,CAACC,MAAO,SAAUvC,QAAS,kBAAMwC,OAAOC,SAASC,KAnClD,mDAoCzB,kBAAC,oBAAD,CAAmBJ,MAAO,CAACC,MAAO,SAAUvC,QAAS,kBAAMwC,OAAOC,SAASC,KAlCzD,yD,GArCNrC,aCRCsC,E,iLAEjB,OACE,6BACE,uD,GAJ2BtC,aCAduC,E,iLAEjB,OACE,6BACE,kD,GAJmCvC,aCGtBwC,E,2MACnBtC,MAAM,CACJuC,QAAS,I,EAGXC,WAAW,WACT9D,IAAM+D,IAAI,oBACT7D,MAAK,SAAA8D,GACJ,EAAKtC,SAAS,CACZmC,QAASG,EAAI5D,UAGhBC,OAAM,SAAAC,GAAG,OAAE6B,QAAQC,IAAI9B,O,mFAIxB+B,KAAKyB,e,+BAOL,OADA3B,QAAQC,IAAIC,KAAKf,MAAMuC,SAErB,6BACE,2CACGxB,KAAKf,MAAMuC,QAAQI,KAAI,SAAAC,GAAS,OAAE,yBAAKC,IAAKD,EAAUE,KAAK,kBAAC,IAAD,CAAMvD,GAAG,iBAAiBqD,EAAUrE,mB,GA1BrEuB,aCDhBiD,E,iLAGjB,OACE,6BACE,mDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAP8BjD,aCGjBkD,E,YACnB,WAAY7D,GAAO,IAAD,8BAChB,4CAAMA,KASR8D,eAAiB,WAEfvE,IAAM+D,IAAN,0BAA6B,EAAKtD,MAAMG,KAAKwD,MAC5ClE,MAAK,SAAA8D,GACJ7B,QAAQC,IAAI4B,EAAI5D,KAAKoE,WACrB,EAAK9C,SAAS,CAAC8C,UAAWR,EAAI5D,KAAKoE,gBAbrC,EAAKlD,MAAM,CACTzB,SAAU,EAAKY,MAAMG,KAAKf,SAC1B4E,UAAW,EAAKhE,MAAMG,KAAK4D,UAC3BzE,MAAO,EAAKU,MAAMG,KAAKb,MACvB2E,SAAU,EAAKjE,MAAMG,KAAK+D,UANZ,E,iFAqBjBtC,KAAKkC,mB,+BAIJ,OACE,yBAAK7D,UAAU,cACb,yBAAKkE,IAAKvC,KAAKf,MAAMkD,UAAWK,IAAI,aACpC,kBAAC,IAAD,CAAMhE,GAAG,eAAT,eAAmC,kBAAC,IAAD,CAAiBC,KAAK,eACzD,4BAAKuB,KAAKf,MAAMzB,UAChB,4BAAKwC,KAAKf,MAAMvB,OAChB,4BAAKsC,KAAKf,MAAMoD,e,GAhCgBtD,a,yBCMzB,WACA0D,GAEX,OADA3C,QAAQC,IAAI,uBAAwB0C,GAC7B9E,IAAMC,KAAK,wBAAyB6E,GACxC5E,MAAK,SAAA8D,GAAG,OAAIA,EAAI5D,QAChBC,OAAM,SAACC,GAAD,OAfQ,SAAAA,GAEnB,MADC6B,QAAQZ,MAAMjB,GACTA,EAaayE,CAAazE,OCoEnB0E,E,YA5Eb,WAAYvE,GAAO,IAAD,8BAChB,4CAAMA,KAORwE,WAAa,SAAAxD,GACX,IAAMqD,EAAOrD,EAAME,OAAOuD,MAAM,GAChC,EAAKxD,SAAS,CACZ8C,UAAWM,KAXG,EAgBlBhD,aAhBkB,uCAgBH,WAAML,GAAN,iBAAA0D,EAAA,6DACb1D,EAAMM,iBAENI,QAAQC,IAAI,iBAAkB,EAAKd,MAAMkD,YAEnCY,EAAa,IAAIC,UACZC,OAAO,YAAa,EAAKhE,MAAMkD,WAN7B,kBASqBe,EAAqBH,GAT1C,OASLI,EATK,OAWX,EAAK9D,SAAS,CAAE8C,UAAWgB,IAC3B,EAAK/E,MAAMwB,QAAQC,KAAK,eAZb,kDAcX,EAAKR,SAAS,CACZH,MAAM,EAAD,KAfI,0DAhBG,sDAEhB,EAAKD,MAAM,CACTzB,SAAU,EAAKY,MAAMG,KAAKf,SAC1B4E,UAAW,EAAKhE,MAAMG,KAAK4D,WAJb,E,sEAqDhB,OADArC,QAAQC,IAAI,iBAAkBC,KAAKf,OAEjC,6BACE,kDACA,kBAACgB,EAAA,EAAD,CAAMC,SAAUF,KAAKP,cACnB,kBAACQ,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,aAApB,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLhB,KAAK,QACLiB,GAAG,QACHC,SAAUT,KAAK4C,cAKnB,kBAAChC,EAAA,EAAD,CAAQL,KAAK,UAAb,eAAkC,kBAAC,IAAD,CAAiB9B,KAAK,qB,GArExCM,aCPLqE,E,iLAEjB,OACE,6BACE,8C,GAJ0BrE,aCAbsE,E,iLAEjB,OACE,6BACE,kD,GAJkCtE,aCErBuE,E,YACnB,WAAYlF,GAAO,IAAD,8BAChB,4CAAMA,KAURmF,mBAAmB,WACjB,EAAKlE,SAAS,CACZmE,YAAa,EAAKvE,MAAMuE,cAbV,EAiBlBC,eAAe,WACb9F,IAAM+D,IAAI,kBACT7D,MAAK,SAAAC,GACJ,EAAKuB,SAAS,CACZqE,UAAW5F,EAASC,WArBR,EA8BlB4F,UAAU,SAACvE,GACT,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAQH,EAAME,OAAOE,SA/BlC,EAkClBoE,aAAa,SAACxE,GAEZA,EAAMM,iBACN/B,IAAMC,KAAK,wBAAyB,CAACiG,MAAO,EAAK5E,MAAM4E,MAAOC,OAAQ,EAAK7E,MAAM6E,OAAQvF,KAAM,EAAKH,MAAMG,KAAKwD,MAC9GlE,MAAK,SAAAC,GAEJ,EAAKuB,SAAS,CACZyE,OAAQ,GACRD,MAAO,GACPL,YAAY,OAEf3F,MAAK,SAAA8D,GAAG,OAAE,EAAK8B,qBA3ChB,EAAKxE,MAAM,CACTuE,YAAY,EACZE,UAAW,GACXI,OAAQ,GACRD,MAAO,GACPE,eAAe,GAPD,E,iFA2BhB/D,KAAKyD,mB,+BAyBD,OACF,yBAAKpF,UAAU,mBACf,4BAAQK,QAASsB,KAAKuD,oBAAtB,uBACA,6BAEIvD,KAAKf,MAAMuE,WACX,0BAAMtD,SAAUF,KAAK4D,cACrB,6BACA,wCAAa,2BAAOrD,KAAK,OAAOhB,KAAK,QAAQC,MAAOQ,KAAKf,MAAM4E,MAAOpD,SAAUT,KAAK2D,aACrF,0CAAe,8BAAUK,KAAK,MAAMC,KAAK,IAAI1E,KAAK,SAASC,MAAOQ,KAAKf,MAAM6E,OAAQrD,SAAUT,KAAK2D,cACpG,4BAAQpD,KAAK,UAAb,WAEA,MAGLP,KAAKf,MAAMyE,UAAU9B,KAAI,SAAAsC,GACxB,OAAO,yBAAK7F,UAAU,YAAYyD,IAAKoC,EAAUnC,KAAK,yBAAK1D,UAAU,iBAAgB,yBAAK2C,MAAO,CAACC,MAAO,QAASsB,IAAK2B,EAAU3F,KAAK4D,UAAWK,IAAI,SAAS,2BAAI0B,EAAU3F,KAAKf,WAAmB,6BAAK,4BAAK0G,EAAUL,OAAW,2BAAIK,EAAUJ,kB,GArEhN/E,a,wBCgBvCoF,IAAQC,IAAIC,IAAKC,K,IA+DFC,E,2MA3DbtF,MAAQ,CACNV,KAAM,EAAKH,MAAMG,M,EAGnBK,QAAU,SAAAL,GACR,EAAKc,SAAS,CACZd,KAAMA,K,wEAYA,IAAD,OAEP,OACE,yBAAKF,UAAU,OACb,kBAAC,EAAD,CAAQE,KAAMyB,KAAKf,MAAMV,KAAMK,QAASoB,KAAKpB,UAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,IAAIC,UAAW7F,IACjC,kBAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,UAAUE,OAC1B,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBQ,QAAS,EAAKA,cAE5C,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,cAAcE,OAC9B,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuBG,KAAM,EAAKU,MAAMV,WAEnD,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,SAASE,OACzB,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkBQ,QAAS,EAAKA,cAE3C,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,QAAQE,OACxB,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAUA,EAAV,CAAiBQ,QAAS,EAAKA,cAE1C,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,QAAQE,OACxB,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAcA,EAAd,CAAqBQ,QAAS,EAAKA,cAE9C,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,gBAAgBE,OAChC,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAkBA,EAAlB,CAAyBQ,QAAS,EAAKA,cAEjD,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,aAAaE,OAC9B,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAeA,EAAf,CAAsBG,KAAM,EAAKU,MAAMV,WAElD,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,gBAAgBE,OAChC,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAmBA,EAAnB,CAA0BQ,QAAS,EAAKA,cAEnD,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,cAAcE,OAC9B,SAAAvG,GAAK,OAAI,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuBG,KAAM,EAAKU,MAAMV,YAGrD,gCAAQ,kBAAC,IAAD,CAAiBE,KAAK,cAAc,4C,GAtDlCK,IAAMC,WCXJ6F,QACW,cAA7B1D,OAAOC,SAAS0D,UAEe,UAA7B3D,OAAOC,SAAS0D,UAEhB3D,OAAOC,SAAS0D,SAASC,MACvB,2DCTNnH,IAAM+D,IAAI,sBAAsB7D,MAAK,SAAAC,GACnC,IAAMS,EAAOT,EAASC,KAEtBgH,IAASJ,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAKpG,KAAMA,KAEbyG,SAASC,eAAe,YDiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvH,MAAK,SAAAwH,GACjCA,EAAaC,iB","file":"static/js/main.5216c9c7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst signup = (username, password, email) => {\r\n  return axios\r\n    .post(\"/api/auth/signup\", {\r\n      username: username,\r\n      password: password,\r\n      email: email,\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password, email) => {\r\n  return axios\r\n    .post(\"/api/auth/login\", {\r\n      username: username,\r\n      password: password,\r\n      email: email\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\n\r\nconst logout = () => {\r\n  axios.delete(\"/api/auth/logout\");\r\n};\r\n\r\nexport { signup, login, logout };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as Nav } from \"react-bootstrap\";\r\nimport { logout } from \"../services/auth\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Navbar = props => {\r\n  const handleLogout = () => {\r\n    // destroys the session on the server\r\n    logout();\r\n    // updates the `user` state in App\r\n    props.setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Nav className=\"nav justify-content-end\" bg=\"primary\">\r\n      {props.user ? (\r\n        <div>\r\n          <Link to=\"/main\">Welcome {props.user.username}</Link>\r\n          <Link to=\"/userprofil\">UserProfile <FontAwesomeIcon icon=\"user\" /></Link>\r\n          <Link to=\"/game\">Game <FontAwesomeIcon icon=\"gamepad\" /></Link>\r\n          <Link to=\"/eventhistory\">Event History <FontAwesomeIcon icon=\"list-alt\" /></Link>\r\n          <Link to=\"/guestbook\">Guestbook <FontAwesomeIcon icon=\"address-book\" /></Link>\r\n          <Link to=\"/\" onClick={handleLogout}>\r\n            Logout <FontAwesomeIcon icon=\"sign-out-alt\" />\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/signup\">Signup <FontAwesomeIcon icon=\"user-plus\" /></Link>\r\n          <Link to=\"/login\">Login <FontAwesomeIcon icon=\"sign-in-alt\"/></Link>\r\n        </div>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\n\r\nclass Startpage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>pLanComm</h1>\r\n                <p> wellcome to the private lan community !</p>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Startpage;","import React, { Component } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    signup(this.state.username, this.state.password, this.state.email).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h2>Signup</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          \r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"email\">Email: </Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Sign up <FontAwesomeIcon icon=\"user-plus\" /></Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import {GoogleLoginButton, GithubLoginButton} from 'react-social-login-buttons';\r\nimport GoogleButton from 'react-google-button';\r\nimport React, { Component } from \"react\";\r\nimport { login } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\nimport {Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nrequire('dotenv').config();\r\n\r\nclass Login extends Component {\r\n  \r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    login(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/projects\"\r\n        this.props.history.push(\"/main\");\r\n      }\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    const REACT_APP_CALLBACK_URL_LOCAL='http://localhost:5555/api/auth/google'\r\n    const REACT_APP_CALLBACK_URL='http://plancomm.herokuapp.com/api/auth/google'\r\n    const GITHUB_LOCAL_REDIRECT='http://localhost:5555/api/auth/github'\r\n    const GITHUB_REDIRECT='http://plancomm.herokuapp.com/api/auth/github'\r\n    return (\r\n      <div>\r\n        <h2>Login</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Log in <FontAwesomeIcon icon=\"sign-in-alt\"/></Button>\r\n        </Form>\r\n        {/*links for heroku usage configured*/}\r\n        <div className=\"SocialButtons\">\r\n        <GoogleLoginButton style={{width: \"300px\"}} onClick={() => window.location.href=REACT_APP_CALLBACK_URL}/>\r\n        <GithubLoginButton style={{width: \"300px\"}} onClick={() => window.location.href=GITHUB_REDIRECT} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Event extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Event Übersicht</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Playerdetails extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Playerdetails</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Playerdetails from \"./Playerdetails\"\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\nexport default class Players extends Component {\r\n  state={\r\n    players: []\r\n  }\r\n\r\n  getPlayers=()=>{\r\n    axios.get(\"/api/players/all\")\r\n    .then(res=>{\r\n      this.setState({\r\n        players: res.data\r\n      })\r\n    })\r\n    .catch(err=>console.log(err))\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getPlayers();\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    console.log(this.state.players)\r\n    return (\r\n      <div>\r\n        <h1>Playerslist</h1>\r\n          {this.state.players.map(onePlayer=><div key={onePlayer._id}><Link to=\"/playerdetail\">{onePlayer.username}</Link></div>)}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Event from \"./Event\"\r\nimport Players from \"./Players\"\r\n\r\nexport default class MainPage extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <h1>Welcome to MainPage</h1>\r\n        <Event />\r\n        <Players />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default class UserProfil extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      username: this.props.user.username,\r\n      avatarUrl: this.props.user.avatarURL,\r\n      email: this.props.user.email,\r\n      usertype: this.props.user.userType\r\n    }\r\n  }\r\n\r\n  getUserProfile = () =>\r\n  {\r\n    axios.get(`/api/usereditor/${this.props.user._id}`)\r\n    .then(res =>{\r\n      console.log(res.data.avatarURL)\r\n      this.setState({avatarURL: res.data.avatarURL})\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() \r\n  {this.getUserProfile()}\r\n\r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"UserProfil\">\r\n        <img src={this.state.avatarURL} alt=\"userbild\" />\r\n        <Link to=\"/usereditor\">Edit Avatar <FontAwesomeIcon icon=\"user-edit\" /></Link>\r\n        <h1>{this.state.username}</h1>\r\n        <h1>{this.state.email}</h1>\r\n        <h1>{this.state.usertype}</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nconst errorHandler = err => {\r\n   console.error(err);\r\n  throw err;\r\n};\r\n/*const Axios = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n   other custom settings \r\n}); \r\n*/\r\n\r\nexport default {\r\n  handleUpload(file) {\r\n    console.log('file to be handled: ', file);\r\n    return axios.post('api/usereditor/upload', file)\r\n      .then(res => res.data)\r\n      .catch((err)=> errorHandler(err));\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport service from '../services/fileupload'\r\nimport axios from \"axios\";\r\n\r\n \r\n\r\n\r\n class UserEditor extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      username: this.props.user.username,\r\n      avatarUrl: this.props.user.avatarURL\r\n    }\r\n      };\r\n\r\n  handleFile = event => {\r\n    const file = event.target.files[0];\r\n    this.setState({\r\n      avatarURL: file\r\n    });\r\n  }\r\n\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    console.log('handleSubmit: ', this.state.avatarURL);\r\n\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"avatarURL\", this.state.avatarURL);\r\n    let avatarURL\r\n    try {\r\n      const urlFromCloudinary = await service.handleUpload(uploadData);\r\n      //const publicID = cloudinaryResponse.public_id;\r\n      this.setState({ avatarURL: urlFromCloudinary});\r\n      this.props.history.push('/userprofil')\r\n    } catch (err) {\r\n      this.setState({\r\n        error: err\r\n      })\r\n    }\r\n\r\n    /*try {\r\n      const response = await axios.post(\"/api/usereditor/update\",\r\n      {avatarURL}\r\n      )\r\n    } catch (err) {\r\n      this.setState({\r\n        error: err\r\n      })\r\n    }\r\n\r\n    //this.props.refreshData();\r\n    this.setState({\r\n      avatarURL: \"\"\r\n    });*/\r\n  } \r\n\r\n  render() {\r\n    console.log(\"This is a test\", this.state);\r\n    return (\r\n      <div>\r\n        <h2>Change your avatar</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"avatarURL\">Current avatar: </Form.Label>\r\n            <Form.Control\r\n              type=\"file\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              onChange={this.handleFile}\r\n            />\r\n          </Form.Group>\r\n\r\n          {/*{this.state.error && (<Alert variant=\"danger\">{this.state.error}</Alert>)} */}\r\n          <Button type=\"submit\">Edit Avatar <FontAwesomeIcon icon=\"user-edit\" /></Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default UserEditor","import React, { Component } from 'react'\r\n\r\nexport default class Game extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Game Site</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class EventHistory extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Event History</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class Guestbook extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      visibility: false,\r\n      guestbook: [],\r\n      entrie: \"\",\r\n      title: \"\",\r\n      showGuestbook: false\r\n    }\r\n  }\r\n\r\n  showGuestbookEntry=()=>{\r\n    this.setState({\r\n      visibility: !this.state.visibility\r\n    })\r\n  }\r\n\r\n  showAllEntries=()=>{\r\n    axios.get(\"/api/guestbook\")\r\n    .then(response=>{\r\n      this.setState({\r\n        guestbook: response.data\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.showAllEntries();\r\n  }\r\n\r\n  addEntrie=(event)=>{\r\n    this.setState({[event.target.name] : event.target.value})\r\n  }\r\n  \r\n  createEntrie=(event)=>{\r\n    \r\n    event.preventDefault();\r\n    axios.post(\"/api/guestbook/create\", {title: this.state.title, entrie: this.state.entrie, user: this.props.user._id})\r\n    .then(response => {\r\n     \r\n      this.setState({\r\n        entrie: \"\",\r\n        title: \"\",\r\n        visibility: false\r\n      });\r\n  }).then(res=>this.showAllEntries())\r\n  \r\n}\r\n\r\n\r\n  render() {\r\n        \r\n        return (\r\n      <div className=\"guestBook-Align\">\r\n      <button onClick={this.showGuestbookEntry}>Add Guestbook entry</button>\r\n      <div>\r\n      {\r\n          this.state.visibility ? \r\n          <form onSubmit={this.createEntrie}>\r\n          <div>\r\n          <label>Titel <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.addEntrie} /></label>\r\n          <label>Eintrag <textarea cols=\"100\" rows=\"5\" name=\"entrie\" value={this.state.entrie} onChange={this.addEntrie}></textarea></label></div>\r\n          <button type=\"submit\">Posten</button>\r\n        </form> :\r\n          null\r\n        }\r\n    </div>\r\n    {this.state.guestbook.map(oneEntrie=>{\r\n      return <div className=\"guestbook\" key={oneEntrie._id}><div className=\"guestBookUser\"><img style={{width: \"50px\"}} src={oneEntrie.user.avatarURL} alt=\"bild\" /><p>{oneEntrie.user.username}</p></div><div><h1>{oneEntrie.title}</h1><p>{oneEntrie.entrie}</p></div></div>\r\n  })}\r\n        \r\n        \r\n        \r\n      </div>\r\n      )\r\n    }\r\n\r\n  \r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Startpage from \"./components/Startpage\";\r\nimport Signup from \"./components/Signup\";\r\nimport Login from \"./components/Login\";\r\nimport Mainpage from \"./components/MainPage\"\r\nimport UserProfil from \"./components/UserProfil\"\r\nimport UserEditor from \"./components/UserEditor\"\r\nimport Game from \"./components/Game\"\r\nimport EventHistory from \"./components/EventHistory\"\r\nimport Guestbook from \"./components/Guestbook\"\r\nimport Playerdetails from \"./components/Playerdetails\"\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nlibrary.add(fab, fas)\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    user: this.props.user\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({\r\n      user: user\r\n    });\r\n  };\r\n\r\n  /*projectsRoute = props => {\r\n    if (this.state.user) {\r\n      return <Projects {...props} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  } */\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar user={this.state.user} setUser={this.setUser} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Startpage} />\r\n          <Route exact path=\"/signup\" render={\r\n            props => <Signup {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/userprofil\" render={\r\n            props => <UserProfil {...props} user={this.state.user} />\r\n          }/>\r\n          <Route exact path=\"/login\" render={\r\n            props => <Login {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/game\" render={\r\n            props => <Game {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/main\" render={\r\n            props => <Mainpage {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/eventhistory\" render={\r\n            props => <EventHistory {...props} setUser={this.setUser} />\r\n          }/>\r\n           <Route exact path=\"/guestbook\" render={\r\n            props => <Guestbook {...props} user={this.state.user} />\r\n          }/>\r\n          <Route exact path=\"/playerdetail\" render={\r\n            props => <Playerdetails {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/usereditor\" render={\r\n            props => <UserEditor {...props} user={this.state.user} />\r\n          }/>\r\n        </Switch>\r\n        <footer><FontAwesomeIcon icon=\"copyright\" /><i> by JAS</i></footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\naxios.get(\"/api/auth/loggedin\").then(response => {\r\n  const user = response.data;\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App user={user} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}